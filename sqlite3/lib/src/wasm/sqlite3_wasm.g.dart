import 'dart:js_interop';

import 'js_interop.dart';

// ignore_for_file: non_constant_identifier_names
typedef Pointer = int;

/// Typed wrappers around the symbols exported by SQLite.
///
/// Generated by `tool/generate_bindings.dart`.
extension type SqliteExports(JSObject raw) implements JSObject {
  external Global get sqlite3_temp_directory;
  external JSFunction? get sqlite3_initialize;
  external void sqlite3_free(Pointer/*<void *>*/ arg0);
  external int sqlite3_open_v2(
      Pointer/*<struct sqlite3_char *>*/ filename,
      Pointer/*<struct sqlite3 * *>*/ ppDb,
      int flags,
      Pointer/*<struct sqlite3_char *>*/ zVfs);
  external int sqlite3_close_v2(Pointer/*<struct sqlite3 *>*/ db);
  external int sqlite3_extended_result_codes(
      Pointer/*<struct sqlite3 *>*/ db, int onoff);
  external int sqlite3_extended_errcode(Pointer/*<struct sqlite3 *>*/ db);
  external Pointer/*<struct sqlite3_char *>*/ sqlite3_errmsg(
      Pointer/*<struct sqlite3 *>*/ db);
  external Pointer/*<struct sqlite3_char *>*/ sqlite3_errstr(int code);
  external JSFunction? get sqlite3_error_offset;
  external Pointer/*<struct sqlite3_char *>*/ sqlite3_libversion();
  external Pointer/*<struct sqlite3_char *>*/ sqlite3_sourceid();
  external int sqlite3_libversion_number();
  external JSBigInt sqlite3_last_insert_rowid(Pointer/*<struct sqlite3 *>*/ db);
  external int sqlite3_changes(Pointer/*<struct sqlite3 *>*/ db);
  external int sqlite3_exec(
      Pointer/*<struct sqlite3 *>*/ db,
      Pointer/*<struct sqlite3_char *>*/ sql,
      Pointer/*<void *>*/ callback,
      Pointer/*<void *>*/ argToCb,
      Pointer/*<struct sqlite3_char * *>*/ errorOut);
  external int sqlite3_get_autocommit(Pointer/*<struct sqlite3 *>*/ db);
  external int sqlite3_prepare_v2(
      Pointer/*<struct sqlite3 *>*/ db,
      Pointer/*<struct sqlite3_char *>*/ zSql,
      int nByte,
      Pointer/*<struct sqlite3_stmt * *>*/ ppStmt,
      Pointer/*<struct sqlite3_char * *>*/ pzTail);
  external int sqlite3_prepare_v3(
      Pointer/*<struct sqlite3 *>*/ db,
      Pointer/*<struct sqlite3_char *>*/ zSql,
      int nByte,
      int prepFlags,
      Pointer/*<struct sqlite3_stmt * *>*/ ppStmt,
      Pointer/*<struct sqlite3_char * *>*/ pzTail);
  external int sqlite3_finalize(Pointer/*<struct sqlite3_stmt *>*/ pStmt);
  external int sqlite3_step(Pointer/*<struct sqlite3_stmt *>*/ pStmt);
  external int sqlite3_reset(Pointer/*<struct sqlite3_stmt *>*/ pStmt);
  external int sqlite3_stmt_isexplain(Pointer/*<struct sqlite3_stmt *>*/ pStmt);
  external int sqlite3_stmt_readonly(Pointer/*<struct sqlite3_stmt *>*/ pStmt);
  external int sqlite3_column_count(Pointer/*<struct sqlite3_stmt *>*/ pStmt);
  external int sqlite3_bind_parameter_count(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt);
  external int sqlite3_bind_parameter_index(
      Pointer/*<struct sqlite3_stmt *>*/ arg0,
      Pointer/*<struct sqlite3_char *>*/ zName);
  external Pointer/*<struct sqlite3_char *>*/ sqlite3_column_name(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int N);
  external int sqlite3_bind_blob64(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt,
      int index,
      Pointer/*<void *>*/ data,
      JSBigInt length,
      Pointer/*<void *>*/ destructor);
  external int sqlite3_bind_double(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int index, double data);
  external int sqlite3_bind_int64(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int index, JSBigInt data);
  external int sqlite3_bind_null(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int index);
  external int sqlite3_bind_text(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt,
      int index,
      Pointer/*<struct sqlite3_char *>*/ data,
      int length,
      Pointer/*<void *>*/ destructor);
  external Pointer/*<void *>*/ sqlite3_column_blob(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int iCol);
  external double sqlite3_column_double(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int iCol);
  external JSBigInt sqlite3_column_int64(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int iCol);
  external Pointer/*<struct sqlite3_char *>*/ sqlite3_column_text(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int iCol);
  external int sqlite3_column_bytes(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int iCol);
  external int sqlite3_column_type(
      Pointer/*<struct sqlite3_stmt *>*/ pStmt, int iCol);
  external Pointer/*<void *>*/ sqlite3_value_blob(
      Pointer/*<struct sqlite3_value *>*/ value);
  external double sqlite3_value_double(
      Pointer/*<struct sqlite3_value *>*/ value);
  external int sqlite3_value_type(Pointer/*<struct sqlite3_value *>*/ value);
  external JSBigInt sqlite3_value_int64(
      Pointer/*<struct sqlite3_value *>*/ value);
  external Pointer/*<struct sqlite3_char *>*/ sqlite3_value_text(
      Pointer/*<struct sqlite3_value *>*/ value);
  external int sqlite3_value_bytes(Pointer/*<struct sqlite3_value *>*/ value);
  external JSFunction? get sqlite3_value_subtype;
  external Pointer/*<void *>*/ sqlite3_aggregate_context(
      Pointer/*<struct sqlite3_context *>*/ ctx, int nBytes);
  external Pointer/*<void *>*/ sqlite3_user_data(
      Pointer/*<struct sqlite3_context *>*/ ctx);
  external void sqlite3_result_blob64(
      Pointer/*<struct sqlite3_context *>*/ ctx,
      Pointer/*<void *>*/ data,
      JSBigInt length,
      Pointer/*<void *>*/ destructor);
  external void sqlite3_result_double(
      Pointer/*<struct sqlite3_context *>*/ ctx, double result);
  external void sqlite3_result_error(Pointer/*<struct sqlite3_context *>*/ ctx,
      Pointer/*<struct sqlite3_char *>*/ msg, int length);
  external void sqlite3_result_int64(
      Pointer/*<struct sqlite3_context *>*/ ctx, JSBigInt result);
  external void sqlite3_result_null(Pointer/*<struct sqlite3_context *>*/ ctx);
  external void sqlite3_result_text(
      Pointer/*<struct sqlite3_context *>*/ ctx,
      Pointer/*<struct sqlite3_char *>*/ data,
      int length,
      Pointer/*<void *>*/ destructor);
  external JSFunction? get sqlite3_result_subtype;
  external JSFunction? get sqlite3_db_config;
  external int sqlite3_vfs_unregister(Pointer/*<struct sqlite3_vfs *>*/ arg0);
  external JSFunction? get sqlite3session_create;
  external JSFunction? get sqlite3session_delete;
  external JSFunction? get sqlite3session_enable;
  external JSFunction? get sqlite3session_indirect;
  external JSFunction? get sqlite3changeset_start;
  external JSFunction? get sqlite3changeset_finalize;
  external JSFunction? get sqlite3changeset_next;
  external JSFunction? get sqlite3changeset_op;
  external JSFunction? get sqlite3changeset_old;
  external JSFunction? get sqlite3changeset_new;
  external JSFunction? get sqlite3changeset_invert;
  external JSFunction? get sqlite3session_patchset;
  external JSFunction? get sqlite3session_changeset;
  external JSFunction? get sqlite3session_isempty;
  external JSFunction? get sqlite3session_attach;
  external JSFunction? get sqlite3session_diff;
  external Pointer/*<void *>*/ dart_sqlite3_malloc(int size);
  external void dart_sqlite3_free(Pointer/*<void *>*/ ptr);
  external Pointer/*<struct sqlite3_vfs *>*/ dart_sqlite3_register_vfs(
      Pointer/*<char *>*/ name, int dartId, int makeDefault);
  external int dart_sqlite3_create_scalar_function(
      Pointer/*<struct sqlite3 *>*/ db,
      Pointer/*<char *>*/ zFunctionName,
      int nArg,
      int eTextRep,
      int id);
  external int dart_sqlite3_create_aggregate_function(
      Pointer/*<struct sqlite3 *>*/ db,
      Pointer/*<char *>*/ zFunctionName,
      int nArg,
      int eTextRep,
      int id);
  external JSFunction? get dart_sqlite3_create_window_function;
  external JSFunction? get dart_sqlite3_updates;
  external JSFunction? get dart_sqlite3_commits;
  external JSFunction? get dart_sqlite3_rollbacks;
  external JSFunction? get dart_sqlite3_create_collation;
  external JSFunction? get dart_sqlite3_db_config_int;
  external JSFunction? get dart_sqlite3changeset_apply;
}
